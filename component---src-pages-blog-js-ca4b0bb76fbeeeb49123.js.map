{"version":3,"sources":["webpack:///./src/pages/blog.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/assets/statnlp_logo.svg","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./src/components/Header/index.jsx"],"names":["__webpack_require__","r","__webpack_exports__","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","_components_Header__WEBPACK_IMPORTED_MODULE_1__","a","createElement","style","margin","maxWidth","display","alignItems","justifyContent","marginTop","m","module","exports","require","default","ProdPageRenderer","_ref","location","pageResources","React","InternalPageRenderer","Object","assign","json","p","loader","enqueue","createContext","linkStyles","color","background","textDecoration","activeStyles","fontWeight","ListLink","props","react_default","marginRight","gatsby_link_default","to","activeStyle","children","AppBar","height","textShadow","backgroundImage","flexDirection","src","marginLeft","listStyle","float","Header_ListLink"],"mappings":"0FAAAA,EAAAC,EAAAC,GAAA,IAAAC,EAAAH,EAAA,GAAAI,EAAAJ,EAAAK,EAAAF,GAAAG,EAAAN,EAAA,KAIeE,EAAA,0BACbE,EAAAG,EAAAC,cAAA,OAAKC,MAAO,CAAEC,OAAM,YAAeC,SAAU,MAC3CP,EAAAG,EAAAC,cAACF,EAAA,EAAD,MACAF,EAAAG,EAAAC,cAAA,MAAIC,MAAO,CAAEG,QAAS,OAAQC,WAAY,SAAUC,eAAgB,SAAUC,UAAW,SAAzF,6CCPJ,IAAsBC,EAKpBC,EAAOC,SALaF,EAKWG,EAAQ,OALRH,EAAEI,SAAYJ,8ECsBhCK,UAjBU,SAAAC,GAAiC,IAA9BC,EAA8BD,EAA9BC,SAAUC,EAAoBF,EAApBE,cACpC,OAAKA,EAGEC,IAAMjB,cAAckB,IAApBC,OAAAC,OAAA,CACLL,WACAC,iBACGA,EAAcK,OALV,2BCPXZ,EAAAC,QAAiBlB,EAAA8B,EAAuB,+ICcfC,QAAOC,QAELP,IAAMQ,cAAc,iBCZzCC,EAAa,CACjBC,MAAK,UACLC,WAAU,UACVC,eAAc,QAGVC,EAAe,CACnBH,MAAK,UACLI,WAAU,QAGNC,EAAW,SAAAC,GAAK,OACpBC,EAAAnC,EAAAC,cAAA,MAAIC,MAAO,CAAEG,QAAO,eAAkB+B,YAAW,SAC/CD,EAAAnC,EAAAC,cAACoC,EAAArC,EAAD,CAAMsC,GAAKJ,EAAMI,GAAKpC,MAAQyB,EAAaY,YAAcR,GAAiBG,EAAMM,YAIrE7C,EAAA,oBACbwC,EAAAnC,EAAAC,cAACwC,EAAA,EAAD,CAAQb,MAAM,UAAU1B,MAAO,CAAEwC,OAAQ,KACvCP,EAAAnC,EAAAC,cAAA,OAAKC,MAAO,CAAEC,OAAM,SAClBgC,EAAAnC,EAAAC,cAACoC,EAAArC,EAAD,CAAMsC,GAAG,IAAIpC,MAAO,CAAEyC,WAAU,OAAUC,gBAAe,OAAUvC,QAAS,OAAQwC,cAAe,QACjGV,EAAAnC,EAAAC,cAAA,OAAK6C,IAAKlC,EAAQ,KAAkCV,MAAO,CAAEM,WAAY,GAAIuC,YAAa,MAC1FZ,EAAAnC,EAAAC,cAAA,MAAIC,MAAO,CAAEM,WAAY,EAAGuC,YAAa,KAAzC,YAEFZ,EAAAnC,EAAAC,cAAA,MAAIC,MAAO,CAAE8C,UAAS,OAAUC,MAAK,QAAWzC,WAAY,MAC1D2B,EAAAnC,EAAAC,cAACiD,EAAD,CAAUZ,GAAG,WAAb,SACAH,EAAAnC,EAAAC,cAACiD,EAAD,CAAUZ,GAAG,YAAb,UACAH,EAAAnC,EAAAC,cAACiD,EAAD,CAAUZ,GAAG,kBAAb,gBACAH,EAAAnC,EAAAC,cAACiD,EAAD,CAAUZ,GAAG,WAAb","file":"component---src-pages-blog-js-ca4b0bb76fbeeeb49123.js","sourcesContent":["import React from \"react\"\nimport Header from \"../components/Header\"\n\n\nexport default () => (\n  <div style={{ margin: `2rem auto`, maxWidth: 1000 }}>\n    <Header />\n    <h1 style={{ display: 'flex', alignItems: 'center', justifyContent: 'center', marginTop: '45vh' }}>To be coming soon!</h1>\n  </div>\n)\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\n\nconst ProdPageRenderer = ({ location, pageResources }) => {\n  if (!pageResources) {\n    return null\n  }\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","module.exports = __webpack_public_path__ + \"static/statnlp_logo-82c79dc657bd9ffad28343ebf9d052f0.svg\";","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\nimport loader from \"./loader\"\n\nconst prefetchPathname = loader.enqueue\n\nconst StaticQueryContext = React.createContext({})\n\nfunction StaticQueryDataRenderer({ staticQueryData, data, query, render }) {\n  const finalData = data\n    ? data.data\n    : staticQueryData[query] && staticQueryData[query].data\n\n  return (\n    <React.Fragment>\n      {finalData && render(finalData)}\n      {!finalData && <div>Loading (StaticQuery)</div>}\n    </React.Fragment>\n  )\n}\n\nconst StaticQuery = props => {\n  const { data, query, render, children } = props\n\n  return (\n    <StaticQueryContext.Consumer>\n      {staticQueryData => (\n        <StaticQueryDataRenderer\n          data={data}\n          query={query}\n          render={render || children}\n          staticQueryData={staticQueryData}\n        />\n      )}\n    </StaticQueryContext.Consumer>\n  )\n}\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n  prefetchPathname,\n}\n","import React from \"react\"\nimport { Link } from \"gatsby\"\nimport AppBar from '@material-ui/core/AppBar'\n\nconst linkStyles = {\n  color: `#344955`,\n  background: `#f5f5f5`,\n  textDecoration: `none`\n}\n\nconst activeStyles = {\n  color: `#232F34`,\n  fontWeight: `bold`\n}\n\nconst ListLink = props => (\n  <li style={{ display: `inline-block`, marginRight: `1rem` }}>\n    <Link to={ props.to } style={ linkStyles } activeStyle={ activeStyles }>{ props.children }</Link>\n  </li>\n)\n\nexport default () => (\n  <AppBar color=\"default\" style={{ height: 64 }}>\n    <div style={{ margin: `1rem` }}>\n      <Link to=\"/\" style={{ textShadow: `none`, backgroundImage: `none`, display: \"flex\", flexDirection: \"row\" }}>\n        <img src={require('../../assets/statnlp_logo.svg')} style={{ marginTop: -30, marginLeft: -25 }}/>\n        <h3 style={{ marginTop: -3, marginLeft: -20}}>StatNLP</h3>\n      </Link>\n      <ul style={{ listStyle: `none`, float: `right`, marginTop: -100 }}>\n        <ListLink to=\"/about/\">About</ListLink>\n        <ListLink to=\"/people/\">People</ListLink>\n        <ListLink to=\"/publications/\">Publications</ListLink>\n        <ListLink to=\"/tools/\">Tools</ListLink>\n      </ul>\n    </div>\n  </AppBar>\n)\n"],"sourceRoot":""}