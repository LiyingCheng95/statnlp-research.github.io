{"version":3,"sources":["webpack:///./src/pages/tools.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/assets/statnlp_logo.svg","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./src/components/Header/index.jsx","webpack:///./node_modules/@material-ui/core/esm/CardActions/CardActions.js","webpack:///./node_modules/@material-ui/core/esm/Button/Button.js"],"names":["__webpack_require__","r","__webpack_exports__","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","_components_Header__WEBPACK_IMPORTED_MODULE_1__","_material_ui_core_Card__WEBPACK_IMPORTED_MODULE_2__","_material_ui_core_CardActions__WEBPACK_IMPORTED_MODULE_3__","_material_ui_core_Button__WEBPACK_IMPORTED_MODULE_4__","_fortawesome_react_fontawesome__WEBPACK_IMPORTED_MODULE_5__","_fortawesome_free_brands_svg_icons__WEBPACK_IMPORTED_MODULE_6__","a","createElement","style","margin","maxWidth","display","flexWrap","width","marginBottom","padding","minWidth","variant","background","color","textShadow","href","target","rel","icon","faGithub","marginLeft","m","module","exports","require","default","ProdPageRenderer","_ref","location","pageResources","React","InternalPageRenderer","Object","assign","json","p","loader","enqueue","createContext","linkStyles","textDecoration","activeStyles","fontWeight","ListLink","props","react_default","marginRight","gatsby_link_default","to","activeStyle","children","AppBar","height","backgroundImage","flexDirection","src","marginTop","listStyle","float","Header_ListLink","_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__","_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_1__","react__WEBPACK_IMPORTED_MODULE_2__","react__WEBPACK_IMPORTED_MODULE_2___default","clsx__WEBPACK_IMPORTED_MODULE_4__","_styles_withStyles__WEBPACK_IMPORTED_MODULE_5__","CardActions","forwardRef","ref","_props$disableSpacing","disableSpacing","classes","className","other","root","spacing","alignItems","& > * + *","name","_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_0__","_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_1__","_styles_colorManipulator__WEBPACK_IMPORTED_MODULE_6__","_ButtonBase__WEBPACK_IMPORTED_MODULE_7__","_utils_helpers__WEBPACK_IMPORTED_MODULE_8__","Button","classNameProp","_props$color","_props$component","component","_props$disabled","disabled","_props$disableFocusRi","disableFocusRipple","focusVisibleClassName","_props$fullWidth","fullWidth","_props$size","size","_props$type","type","_props$variant","text","outlined","contained","primary","secondary","textPrimary","textSecondary","outlinedPrimary","outlinedSecondary","containedPrimary","containedSecondary","concat","inherit","colorInherit","focusRipple","focusVisible","label","theme","lineHeight","typography","button","boxSizing","borderRadius","shape","palette","transition","transitions","create","duration","&:hover","backgroundColor","action","hoverOpacity","@media (hover: none)","&$disabled","justifyContent","main","border","getContrastText","grey","boxShadow","shadows","&$focusVisible","&:active","disabledBackground","A100","contrastText","dark","borderColor","sizeSmall","fontSize","pxToRem","sizeLarge"],"mappings":"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","file":"component---src-pages-tools-js-72764f4f30bda877d8fd.js","sourcesContent":["import React from \"react\"\nimport Header from \"../components/Header\"\nimport Card from '@material-ui/core/Card'\nimport CardActions from '@material-ui/core/CardActions'\nimport Button from '@material-ui/core/Button'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faGithub } from '@fortawesome/free-brands-svg-icons'\n\nexport default () => (\n  <div style={{ margin: `5rem auto`, maxWidth: 1000 }}>\n    <Header />\n    <div style={{ display: 'flex', flexWrap: 'wrap' }}>\n      <h1>StatNLP-core</h1>\n      <Card style={{ width: \"100%\", marginBottom: \"15px\", padding: \"20px\", minWidth: \"1000px\" }}>\n        StatNLP structured prediction framework developed by StatNLP team provdies a way for\n        NLP researchers to rapidly develop structured models including conditional random fields (CRF),\n        structured perceptron, structured SVM, softmax-margin CRF as well as neural\n        CRF with various inference strategies.\n        <CardActions>\n          <Button variant=\"contained\" style={{ background: \"#232F34\", color: \"#ffff\", textShadow: \"none\"}} href=\"https://gitlab.com/sutd_nlp/statnlp-core\" target=\"_blank\" rel=\"noopener\">\n            Download\n            <FontAwesomeIcon icon={faGithub} style={{ marginLeft: \"10px\" }}/>\n          </Button>\n        </CardActions>\n      </Card>\n\n      <h1>StatNLP Pytorch</h1>\n      <Card style={{ width: \"100%\", marginBottom: \"15px\", padding: \"20px\", minWidth: \"1000px\" }}>\n        The PyTorch version of StatNLP implementation V0.1.\n        Please also make sure you understand the fundamental knowledge of the\n        framework as well as the Java framework.\n        <CardActions>\n          <Button variant=\"contained\" style={{ background: \"#232F34\", color: \"#ffff\", textShadow: \"none\"}} href=\"https://github.com/statnlp-research/statnlp-neural\" target=\"_blank\" rel=\"noopener\">\n            Download\n            <FontAwesomeIcon icon={faGithub} style={{ marginLeft: \"10px\" }}/>\n          </Button>\n        </CardActions>\n      </Card>\n    </div>\n  </div>\n)\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\n\nconst ProdPageRenderer = ({ location, pageResources }) => {\n  if (!pageResources) {\n    return null\n  }\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","module.exports = __webpack_public_path__ + \"static/statnlp_logo-82c79dc657bd9ffad28343ebf9d052f0.svg\";","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\nimport loader from \"./loader\"\n\nconst prefetchPathname = loader.enqueue\n\nconst StaticQueryContext = React.createContext({})\n\nfunction StaticQueryDataRenderer({ staticQueryData, data, query, render }) {\n  const finalData = data\n    ? data.data\n    : staticQueryData[query] && staticQueryData[query].data\n\n  return (\n    <React.Fragment>\n      {finalData && render(finalData)}\n      {!finalData && <div>Loading (StaticQuery)</div>}\n    </React.Fragment>\n  )\n}\n\nconst StaticQuery = props => {\n  const { data, query, render, children } = props\n\n  return (\n    <StaticQueryContext.Consumer>\n      {staticQueryData => (\n        <StaticQueryDataRenderer\n          data={data}\n          query={query}\n          render={render || children}\n          staticQueryData={staticQueryData}\n        />\n      )}\n    </StaticQueryContext.Consumer>\n  )\n}\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n  prefetchPathname,\n}\n","import React from \"react\"\nimport { Link } from \"gatsby\"\nimport AppBar from '@material-ui/core/AppBar'\n\nconst linkStyles = {\n  color: `#344955`,\n  background: `#f5f5f5`,\n  textDecoration: `none`\n}\n\nconst activeStyles = {\n  color: `#232F34`,\n  fontWeight: `bold`\n}\n\nconst ListLink = props => (\n  <li style={{ display: `inline-block`, marginRight: `1rem` }}>\n    <Link to={ props.to } style={ linkStyles } activeStyle={ activeStyles }>{ props.children }</Link>\n  </li>\n)\n\nexport default () => (\n  <AppBar color=\"default\" style={{ height: 64 }}>\n    <div style={{ margin: `1rem` }}>\n      <Link to=\"/\" style={{ textShadow: `none`, backgroundImage: `none`, display: \"flex\", flexDirection: \"row\" }}>\n        <img src={require('../../assets/statnlp_logo.svg')} style={{ marginTop: -30, marginLeft: -25 }}/>\n        <h3 style={{ marginTop: -3, marginLeft: -20}}>StatNLP</h3>\n      </Link>\n      <ul style={{ listStyle: `none`, float: `right`, marginTop: -100 }}>\n        <ListLink to=\"/about/\">About</ListLink>\n        <ListLink to=\"/people/\">People</ListLink>\n        <ListLink to=\"/publications/\">Publications</ListLink>\n        <ListLink to=\"/tools/\">Tools</ListLink>\n      </ul>\n    </div>\n  </AppBar>\n)\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport '../Button'; // So we don't have any override priority issue.\n\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    display: 'flex',\n    alignItems: 'center',\n    padding: 8\n  },\n\n  /* Styles applied to the root element if `disableSpacing={false}`. */\n  spacing: {\n    '& > * + *': {\n      marginLeft: 8\n    }\n  }\n};\nvar CardActions = React.forwardRef(function CardActions(props, ref) {\n  var _props$disableSpacing = props.disableSpacing,\n      disableSpacing = _props$disableSpacing === void 0 ? false : _props$disableSpacing,\n      classes = props.classes,\n      className = props.className,\n      other = _objectWithoutProperties(props, [\"disableSpacing\", \"classes\", \"className\"]);\n\n  return React.createElement(\"div\", _extends({\n    className: clsx(classes.root, className, !disableSpacing && classes.spacing),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? CardActions.propTypes = {\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * If `true`, the actions do not have additional margin.\n   */\n  disableSpacing: PropTypes.bool\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiCardActions'\n})(CardActions);","import _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport { fade } from '../styles/colorManipulator';\nimport ButtonBase from '../ButtonBase';\nimport { capitalize } from '../utils/helpers';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: _extends({\n      lineHeight: 1.75\n    }, theme.typography.button, {\n      boxSizing: 'border-box',\n      minWidth: 64,\n      padding: '6px 16px',\n      borderRadius: theme.shape.borderRadius,\n      color: theme.palette.text.primary,\n      transition: theme.transitions.create(['background-color', 'box-shadow', 'border'], {\n        duration: theme.transitions.duration[\"short\"]\n      }),\n      '&:hover': {\n        textDecoration: 'none',\n        backgroundColor: fade(theme.palette.text.primary, theme.palette.action.hoverOpacity),\n        // Reset on touch devices, it doesn't add specificity\n        '@media (hover: none)': {\n          backgroundColor: 'transparent'\n        },\n        '&$disabled': {\n          backgroundColor: 'transparent'\n        }\n      },\n      '&$disabled': {\n        color: theme.palette.action.disabled\n      }\n    }),\n\n    /* Styles applied to the span element that wraps the children. */\n    label: {\n      width: '100%',\n      // Ensure the correct width for iOS Safari\n      display: 'inherit',\n      alignItems: 'inherit',\n      justifyContent: 'inherit'\n    },\n\n    /* Styles applied to the root element if `variant=\"text\"`. */\n    text: {\n      padding: '6px 8px'\n    },\n\n    /* Styles applied to the root element if `variant=\"text\"` and `color=\"primary\"`. */\n    textPrimary: {\n      color: theme.palette.primary.main,\n      '&:hover': {\n        backgroundColor: fade(theme.palette.primary.main, theme.palette.action.hoverOpacity),\n        // Reset on touch devices, it doesn't add specificity\n        '@media (hover: none)': {\n          backgroundColor: 'transparent'\n        }\n      }\n    },\n\n    /* Styles applied to the root element if `variant=\"text\"` and `color=\"secondary\"`. */\n    textSecondary: {\n      color: theme.palette.secondary.main,\n      '&:hover': {\n        backgroundColor: fade(theme.palette.secondary.main, theme.palette.action.hoverOpacity),\n        // Reset on touch devices, it doesn't add specificity\n        '@media (hover: none)': {\n          backgroundColor: 'transparent'\n        }\n      }\n    },\n\n    /* Styles applied to the root element if `variant=\"outlined\"`. */\n    outlined: {\n      padding: '5px 16px',\n      border: \"1px solid \".concat(theme.palette.type === 'light' ? 'rgba(0, 0, 0, 0.23)' : 'rgba(255, 255, 255, 0.23)'),\n      '&$disabled': {\n        border: \"1px solid \".concat(theme.palette.action.disabled)\n      }\n    },\n\n    /* Styles applied to the root element if `variant=\"outlined\"` and `color=\"primary\"`. */\n    outlinedPrimary: {\n      color: theme.palette.primary.main,\n      border: \"1px solid \".concat(fade(theme.palette.primary.main, 0.5)),\n      '&:hover': {\n        border: \"1px solid \".concat(theme.palette.primary.main),\n        backgroundColor: fade(theme.palette.primary.main, theme.palette.action.hoverOpacity),\n        // Reset on touch devices, it doesn't add specificity\n        '@media (hover: none)': {\n          backgroundColor: 'transparent'\n        }\n      }\n    },\n\n    /* Styles applied to the root element if `variant=\"outlined\"` and `color=\"secondary\"`. */\n    outlinedSecondary: {\n      color: theme.palette.secondary.main,\n      border: \"1px solid \".concat(fade(theme.palette.secondary.main, 0.5)),\n      '&:hover': {\n        border: \"1px solid \".concat(theme.palette.secondary.main),\n        backgroundColor: fade(theme.palette.secondary.main, theme.palette.action.hoverOpacity),\n        // Reset on touch devices, it doesn't add specificity\n        '@media (hover: none)': {\n          backgroundColor: 'transparent'\n        }\n      },\n      '&$disabled': {\n        border: \"1px solid \".concat(theme.palette.action.disabled)\n      }\n    },\n\n    /* Styles applied to the root element if `variant=\"contained\"`. */\n    contained: {\n      color: theme.palette.getContrastText(theme.palette.grey[300]),\n      backgroundColor: theme.palette.grey[300],\n      boxShadow: theme.shadows[2],\n      '&$focusVisible': {\n        boxShadow: theme.shadows[6]\n      },\n      '&:active': {\n        boxShadow: theme.shadows[8]\n      },\n      '&$disabled': {\n        color: theme.palette.action.disabled,\n        boxShadow: theme.shadows[0],\n        backgroundColor: theme.palette.action.disabledBackground\n      },\n      '&:hover': {\n        backgroundColor: theme.palette.grey.A100,\n        // Reset on touch devices, it doesn't add specificity\n        '@media (hover: none)': {\n          backgroundColor: theme.palette.grey[300]\n        },\n        '&$disabled': {\n          backgroundColor: theme.palette.action.disabledBackground\n        }\n      }\n    },\n\n    /* Styles applied to the root element if `variant=\"contained\"` and `color=\"primary\"`. */\n    containedPrimary: {\n      color: theme.palette.primary.contrastText,\n      backgroundColor: theme.palette.primary.main,\n      '&:hover': {\n        backgroundColor: theme.palette.primary.dark,\n        // Reset on touch devices, it doesn't add specificity\n        '@media (hover: none)': {\n          backgroundColor: theme.palette.primary.main\n        }\n      }\n    },\n\n    /* Styles applied to the root element if `variant=\"contained\"` and `color=\"secondary\"`. */\n    containedSecondary: {\n      color: theme.palette.secondary.contrastText,\n      backgroundColor: theme.palette.secondary.main,\n      '&:hover': {\n        backgroundColor: theme.palette.secondary.dark,\n        // Reset on touch devices, it doesn't add specificity\n        '@media (hover: none)': {\n          backgroundColor: theme.palette.secondary.main\n        }\n      }\n    },\n\n    /* Pseudo-class applied to the ButtonBase root element if the button is keyboard focused. */\n    focusVisible: {},\n\n    /* Pseudo-class applied to the root element if `disabled={true}`. */\n    disabled: {},\n\n    /* Styles applied to the root element if `color=\"inherit\"`. */\n    colorInherit: {\n      color: 'inherit',\n      borderColor: 'currentColor'\n    },\n\n    /* Styles applied to the root element if `size=\"small\"`. */\n    sizeSmall: {\n      padding: '4px 8px',\n      fontSize: theme.typography.pxToRem(13)\n    },\n\n    /* Styles applied to the root element if `size=\"large\"`. */\n    sizeLarge: {\n      padding: '8px 24px',\n      fontSize: theme.typography.pxToRem(15)\n    },\n\n    /* Styles applied to the root element if `fullWidth={true}`. */\n    fullWidth: {\n      width: '100%'\n    }\n  };\n};\nvar Button = React.forwardRef(function Button(props, ref) {\n  var children = props.children,\n      classes = props.classes,\n      classNameProp = props.className,\n      _props$color = props.color,\n      color = _props$color === void 0 ? 'default' : _props$color,\n      _props$component = props.component,\n      component = _props$component === void 0 ? 'button' : _props$component,\n      _props$disabled = props.disabled,\n      disabled = _props$disabled === void 0 ? false : _props$disabled,\n      _props$disableFocusRi = props.disableFocusRipple,\n      disableFocusRipple = _props$disableFocusRi === void 0 ? false : _props$disableFocusRi,\n      focusVisibleClassName = props.focusVisibleClassName,\n      _props$fullWidth = props.fullWidth,\n      fullWidth = _props$fullWidth === void 0 ? false : _props$fullWidth,\n      _props$size = props.size,\n      size = _props$size === void 0 ? 'medium' : _props$size,\n      _props$type = props.type,\n      type = _props$type === void 0 ? 'button' : _props$type,\n      _props$variant = props.variant,\n      variant = _props$variant === void 0 ? 'text' : _props$variant,\n      other = _objectWithoutProperties(props, [\"children\", \"classes\", \"className\", \"color\", \"component\", \"disabled\", \"disableFocusRipple\", \"focusVisibleClassName\", \"fullWidth\", \"size\", \"type\", \"variant\"]);\n\n  var text = variant === 'text';\n  var outlined = variant === 'outlined';\n  var contained = variant === 'contained';\n  var primary = color === 'primary';\n  var secondary = color === 'secondary';\n  var className = clsx(classes.root, classNameProp, text && [classes.text, primary && classes.textPrimary, secondary && classes.textSecondary], outlined && [classes.outlined, primary && classes.outlinedPrimary, secondary && classes.outlinedSecondary], contained && [classes.contained, primary && classes.containedPrimary, secondary && classes.containedSecondary], size !== 'medium' && classes[\"size\".concat(capitalize(size))], disabled && classes.disabled, fullWidth && classes.fullWidth, {\n    inherit: classes.colorInherit\n  }[color]);\n  return React.createElement(ButtonBase, _extends({\n    className: className,\n    component: component,\n    disabled: disabled,\n    focusRipple: !disableFocusRipple,\n    focusVisibleClassName: clsx(classes.focusVisible, focusVisibleClassName),\n    ref: ref,\n    type: type\n  }, other), React.createElement(\"span\", {\n    className: classes.label\n  }, children));\n});\nprocess.env.NODE_ENV !== \"production\" ? Button.propTypes = {\n  /**\n   * The content of the button.\n   */\n  children: PropTypes.node.isRequired,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   */\n  color: PropTypes.oneOf(['default', 'inherit', 'primary', 'secondary']),\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a DOM element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * If `true`, the button will be disabled.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true`, the  keyboard focus ripple will be disabled.\n   * `disableRipple` must also be true.\n   */\n  disableFocusRipple: PropTypes.bool,\n\n  /**\n   * If `true`, the ripple effect will be disabled.\n   *\n   * ⚠️ Without a ripple there is no styling for :focus-visible by default. Be sure\n   * to highlight the element by applying separate styles with the `focusVisibleClassName`.\n   */\n  disableRipple: PropTypes.bool,\n\n  /**\n   * @ignore\n   */\n  focusVisibleClassName: PropTypes.string,\n\n  /**\n   * If `true`, the button will take up the full width of its container.\n   */\n  fullWidth: PropTypes.bool,\n\n  /**\n   * The URL to link to when the button is clicked.\n   * If defined, an `a` element will be used as the root node.\n   */\n  href: PropTypes.string,\n\n  /**\n   * The size of the button.\n   * `small` is equivalent to the dense button styling.\n   */\n  size: PropTypes.oneOf(['small', 'medium', 'large']),\n\n  /**\n   * @ignore\n   */\n  type: PropTypes.string,\n\n  /**\n   * The variant to use.\n   */\n  variant: PropTypes.oneOf(['text', 'outlined', 'contained'])\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiButton'\n})(Button);"],"sourceRoot":""}